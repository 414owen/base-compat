# This Travis job script has been generated by a script via
#
#   haskell-ci '--output=.travis.yml' '--config=cabal.haskell-ci' 'cabal.project'
#
# For more information, see https://github.com/haskell-CI/haskell-ci
#
# version: 0.3.20190815
#
# This file is patched:
# - We install the typediff utility from its repoistory.
# - We amend the cabal.project with the BATTERIES environment variable.
#   When BATTERIES=NO is set, we exclude the `base-compat-batteries` and
#   `check` package/directories from the build.
#   We assume that BATTERIES=NO implies that the tests are disabled as well.
# - These changes are stored in travis.yml.patch.
#
language: c
dist: xenial
git:
  # whether to recursively clone submodules
  submodules: false
cache:
  directories:
    - $HOME/.cabal/packages
    - $HOME/.cabal/store
before_cache:
  - rm -fv $CABALHOME/packages/hackage.haskell.org/build-reports.log
  # remove files that are regenerated by 'cabal update'
  - rm -fv $CABALHOME/packages/hackage.haskell.org/00-index.*
  - rm -fv $CABALHOME/packages/hackage.haskell.org/*.json
  - rm -fv $CABALHOME/packages/hackage.haskell.org/01-index.cache
  - rm -fv $CABALHOME/packages/hackage.haskell.org/01-index.tar
  - rm -fv $CABALHOME/packages/hackage.haskell.org/01-index.tar.idx
  - rm -rfv $CABALHOME/packages/head.hackage
matrix:
  include:
    - compiler: ghc-8.8.1
      addons: {"apt":{"sources":["hvr-ghc"],"packages":["ghc-8.8.1","cabal-install-3.0"]}}
    - compiler: ghc-8.6.5
      addons: {"apt":{"sources":["hvr-ghc"],"packages":["ghc-8.6.5","cabal-install-2.4"]}}
    - compiler: ghc-8.6.4
      addons: {"apt":{"sources":["hvr-ghc"],"packages":["ghc-8.6.4","cabal-install-2.4"]}}
    - compiler: ghc-8.6.3
      addons: {"apt":{"sources":["hvr-ghc"],"packages":["ghc-8.6.3","cabal-install-2.4"]}}
    - compiler: ghc-8.6.2
      addons: {"apt":{"sources":["hvr-ghc"],"packages":["ghc-8.6.2","cabal-install-2.4"]}}
    - compiler: ghc-8.6.1
      addons: {"apt":{"sources":["hvr-ghc"],"packages":["ghc-8.6.1","cabal-install-2.4"]}}
    - compiler: ghc-8.4.4
      addons: {"apt":{"sources":["hvr-ghc"],"packages":["ghc-8.4.4","cabal-install-2.4"]}}
    - compiler: ghc-8.4.3
      addons: {"apt":{"sources":["hvr-ghc"],"packages":["ghc-8.4.3","cabal-install-2.4"]}}
    - compiler: ghc-8.4.2
      addons: {"apt":{"sources":["hvr-ghc"],"packages":["ghc-8.4.2","cabal-install-2.4"]}}
    - compiler: ghc-8.4.1
      addons: {"apt":{"sources":["hvr-ghc"],"packages":["ghc-8.4.1","cabal-install-2.4"]}}
    - compiler: ghc-8.2.2
      addons: {"apt":{"sources":["hvr-ghc"],"packages":["ghc-8.2.2","cabal-install-2.4"]}}
    - compiler: ghc-8.2.1
      addons: {"apt":{"sources":["hvr-ghc"],"packages":["ghc-8.2.1","cabal-install-2.4"]}}
    - compiler: ghc-8.0.2
      addons: {"apt":{"sources":["hvr-ghc"],"packages":["ghc-8.0.2","cabal-install-2.4"]}}
    - compiler: ghc-8.0.1
      addons: {"apt":{"sources":["hvr-ghc"],"packages":["ghc-8.0.1","cabal-install-2.4"]}}
    - compiler: ghc-7.10.3
      addons: {"apt":{"sources":["hvr-ghc"],"packages":["ghc-7.10.3","cabal-install-2.4"]}}
    - compiler: ghc-7.10.2
      addons: {"apt":{"sources":["hvr-ghc"],"packages":["ghc-7.10.2","cabal-install-2.4"]}}
    - compiler: ghc-7.10.1
      addons: {"apt":{"sources":["hvr-ghc"],"packages":["ghc-7.10.1","cabal-install-2.4"]}}
    - compiler: ghc-7.8.4
      addons: {"apt":{"sources":["hvr-ghc"],"packages":["ghc-7.8.4","cabal-install-2.4"]}}
    - compiler: ghc-7.8.3
      addons: {"apt":{"sources":["hvr-ghc"],"packages":["ghc-7.8.3","cabal-install-2.4"]}}
    - compiler: ghc-7.8.2
      addons: {"apt":{"sources":["hvr-ghc"],"packages":["ghc-7.8.2","cabal-install-2.4"]}}
    - compiler: ghc-7.8.1
      addons: {"apt":{"sources":["hvr-ghc"],"packages":["ghc-7.8.1","cabal-install-2.4"]}}
      env: BATTERIES=NO
    - compiler: ghc-7.6.3
      addons: {"apt":{"sources":["hvr-ghc"],"packages":["ghc-7.6.3","cabal-install-2.4"]}}
    - compiler: ghc-7.6.2
      addons: {"apt":{"sources":["hvr-ghc"],"packages":["ghc-7.6.2","cabal-install-2.4"]}}
    - compiler: ghc-7.6.1
      addons: {"apt":{"sources":["hvr-ghc"],"packages":["ghc-7.6.1","cabal-install-2.4"]}}
    - compiler: ghc-7.4.2
      addons: {"apt":{"sources":["hvr-ghc"],"packages":["ghc-7.4.2","cabal-install-2.4"]}}
    - compiler: ghc-7.4.1
      addons: {"apt":{"sources":["hvr-ghc"],"packages":["ghc-7.4.1","cabal-install-2.4"]}}
    - compiler: ghc-7.2.2
      addons: {"apt":{"sources":["hvr-ghc"],"packages":["ghc-7.2.2","cabal-install-2.4"]}}
    - compiler: ghc-7.2.1
      addons: {"apt":{"sources":["hvr-ghc"],"packages":["ghc-7.2.1","cabal-install-2.4"]}}
      env: BATTERIES=NO
    - compiler: ghc-7.0.4
      addons: {"apt":{"sources":["hvr-ghc"],"packages":["ghc-7.0.4","cabal-install-2.4"]}}
    - compiler: ghc-7.0.3
      addons: {"apt":{"sources":["hvr-ghc"],"packages":["ghc-7.0.3","cabal-install-2.4"]}}
    - compiler: ghc-7.0.2
      addons: {"apt":{"sources":["hvr-ghc"],"packages":["ghc-7.0.2","cabal-install-2.4"]}}
    - compiler: ghc-7.0.1
      addons: {"apt":{"sources":["hvr-ghc"],"packages":["ghc-7.0.1","cabal-install-2.4"]}}
      env: BATTERIES=NO
  allow_failures:
    - compiler: ghc-8.8.1
before_install:
  - HC=$(echo "/opt/$CC/bin/ghc" | sed 's/-/\//')
  - WITHCOMPILER="-w $HC"
  - HCPKG="$HC-pkg"
  - unset CC
  - CABAL=/opt/ghc/bin/cabal
  - CABALHOME=$HOME/.cabal
  # install typediff
  - mkdir -p $HOME/.local/bin
  - curl -L https://github.com/haskell-compat/base-compat/releases/download/typediff-0.1.4/typediff > $HOME/.local/bin/typediff
  - chmod +x $HOME/.local/bin/typediff
  - export PATH="/opt/ghc/bin:$CABALHOME/bin:$HOME/.local/bin:$PATH"
  - TOP=$(pwd)
  - "HCNUMVER=$(${HC} --numeric-version|perl -ne '/^(\\d+)\\.(\\d+)\\.(\\d+)(\\.(\\d+))?$/; print(10000 * $1 + 100 * $2 + ($3 == 0 ? $5 != 1 : $3))')"
  - echo $HCNUMVER
  - CABAL="$CABAL -vnormal+nowrap+markoutput"
  - set -o pipefail
install:
  - ${CABAL} --version
  - echo "$(${HC} --version) [$(${HC} --print-project-git-commit-id 2> /dev/null || echo '?')]"
  - TEST=--enable-tests
  - if [ $HCNUMVER -lt 70002 ] || [ $HCNUMVER -ge 70200 ] && [ $HCNUMVER -lt 70202 ] || [ $HCNUMVER -ge 70400 ] && [ $HCNUMVER -lt 70402 ] || [ $HCNUMVER -ge 70800 ] && [ $HCNUMVER -lt 70802 ] ; then TEST=--disable-tests ; fi
  - BENCH=--enable-benchmarks
  - HEADHACKAGE=false
  - if [ $HCNUMVER -ge 80800 ] ; then HEADHACKAGE=true ; fi
  - rm -f $CABALHOME/config
  - |
    echo "verbose: normal +nowrap +markoutput"          >> $CABALHOME/config
    echo "remote-build-reporting: anonymous"            >> $CABALHOME/config
    echo "write-ghc-environment-files: always"          >> $CABALHOME/config
    echo "remote-repo-cache: $CABALHOME/packages"       >> $CABALHOME/config
    echo "logs-dir:          $CABALHOME/logs"           >> $CABALHOME/config
    echo "world-file:        $CABALHOME/world"          >> $CABALHOME/config
    echo "extra-prog-path:   $CABALHOME/bin"            >> $CABALHOME/config
    echo "symlink-bindir:    $CABALHOME/bin"            >> $CABALHOME/config
    echo "installdir:        $CABALHOME/bin"            >> $CABALHOME/config
    echo "build-summary:     $CABALHOME/logs/build.log" >> $CABALHOME/config
    echo "store-dir:         $CABALHOME/store"          >> $CABALHOME/config
    echo "install-dirs user"                            >> $CABALHOME/config
    echo "  prefix: $CABALHOME"                         >> $CABALHOME/config
    echo "repository hackage.haskell.org"               >> $CABALHOME/config
    echo "  url: http://hackage.haskell.org/"           >> $CABALHOME/config
  - |
    if $HEADHACKAGE; then
    echo "allow-newer: $($HCPKG list --simple-output | sed -E 's/([a-zA-Z-]+)-[0-9.]+/*:\1/g')" >> $CABALHOME/config
    echo "repository head.hackage.ghc.haskell.org"                                        >> $CABALHOME/config
    echo "   url: https://ghc.gitlab.haskell.org/head.hackage/"                           >> $CABALHOME/config
    echo "   secure: True"                                                                >> $CABALHOME/config
    echo "   root-keys: 7541f32a4ccca4f97aea3b22f5e593ba2c0267546016b992dfadcd2fe944e55d" >> $CABALHOME/config
    echo "              26021a13b401500c8eb2761ca95c61f2d625bfef951b939a8124ed12ecf07329" >> $CABALHOME/config
    echo "              f76d08be13e9a61a377a85e2fb63f4c5435d40f8feb3e12eb05905edb8cdea89" >> $CABALHOME/config
    echo "   key-threshold: 3"                                                            >> $CABALHOME/config
    fi
  - cat $CABALHOME/config
  - rm -fv cabal.project cabal.project.local cabal.project.freeze
  - travis_retry ${CABAL} v2-update -v
  # Generate cabal.project
  - rm -rf cabal.project cabal.project.local cabal.project.freeze
  - touch cabal.project
  - |
    echo "packages: ./base-compat" >> cabal.project
    if [ ! "x$BATTERIES" = "xNO" ] ; then (echo "packages: ./base-compat-batteries" >> cabal.project; echo "packages: ./check" >> cabal.project) ; fi
  - |
  - "for pkg in $($HCPKG list --simple-output); do echo $pkg | sed 's/-[^-]*$//' | (grep -vE -- '^(base-compat|base-compat-batteries|type-check)$' || true) | sed 's/^/constraints: /' | sed 's/$/ installed/' >> cabal.project.local; done"
  - cat cabal.project || true
  - cat cabal.project.local || true
  - if [ -f "./base-compat/configure.ac" ]; then (cd "./base-compat" && autoreconf -i); fi
  - if [ -f "./base-compat-batteries/configure.ac" ]; then (cd "./base-compat-batteries" && autoreconf -i); fi
  - if [ -f "./check/configure.ac" ]; then (cd "./check" && autoreconf -i); fi
  - ${CABAL} v2-freeze $WITHCOMPILER ${TEST} ${BENCH}
  - "cat cabal.project.freeze | sed -E 's/^(constraints: *| *)//' | sed 's/any.//'"
  - rm  cabal.project.freeze
  - travis_wait ${CABAL} v2-build $WITHCOMPILER ${TEST} ${BENCH} --dep -j2 all
  - travis_wait ${CABAL} v2-build $WITHCOMPILER --disable-tests --disable-benchmarks --dep -j2 all
script:
  - DISTDIR=$(mktemp -d /tmp/dist-test.XXXX)
  # Packaging...
  - ${CABAL} v2-sdist all
  # Unpacking...
  - mv dist-newstyle/sdist/*.tar.gz ${DISTDIR}/
  - cd ${DISTDIR} || false
  - find . -maxdepth 1 -type f -name '*.tar.gz' -exec tar -xvf '{}' \;
  - find . -maxdepth 1 -type f -name '*.tar.gz' -exec rm       '{}' \;
  - PKGDIR_base_compat="$(find . -maxdepth 1 -type d -regex '.*/base-compat-[0-9.]*')"
  - PKGDIR_base_compat_batteries="$(find . -maxdepth 1 -type d -regex '.*/base-compat-batteries-[0-9.]*')"
  - PKGDIR_type_check="$(find . -maxdepth 1 -type d -regex '.*/type-check-[0-9.]*')"
  # Generate cabal.project
  - rm -rf cabal.project cabal.project.local cabal.project.freeze
  - touch cabal.project
  - |
    echo "packages: ${PKGDIR_base_compat}" >> cabal.project
    if [ ! "x$BATTERIES" = "xNO" ] ; then (echo "packages: ${PKGDIR_base_compat_batteries}" >> cabal.project; echo "packages: ${PKGDIR_type_check}" >> cabal.project) ; fi
  - |
  - "for pkg in $($HCPKG list --simple-output); do echo $pkg | sed 's/-[^-]*$//' | (grep -vE -- '^(base-compat|base-compat-batteries|type-check)$' || true) | sed 's/^/constraints: /' | sed 's/$/ installed/' >> cabal.project.local; done"
  - cat cabal.project || true
  - cat cabal.project.local || true
  # Building...
  # this builds all libraries and executables (without tests/benchmarks)
  - ${CABAL} v2-build $WITHCOMPILER --disable-tests --disable-benchmarks all
  # Building with tests and benchmarks...
  # build & run tests, build benchmarks
  - ${CABAL} v2-build $WITHCOMPILER ${TEST} ${BENCH} all
  # Testing...
  - if [ $HCNUMVER -ge 70002 ] && [ $HCNUMVER -lt 70200 ] || [ $HCNUMVER -ge 70202 ] && [ $HCNUMVER -lt 70400 ] || [ $HCNUMVER -ge 70402 ] && [ $HCNUMVER -lt 70800 ] || [ $HCNUMVER -ge 70802 ] ; then ${CABAL} v2-test $WITHCOMPILER ${TEST} ${BENCH} all ; fi
  # cabal check...
  - (cd ${PKGDIR_base_compat} && ${CABAL} -vnormal check)
  - if [ ! "x$BATTERIES" = "xNO" ] ; then (cd ${PKGDIR_base_compat_batteries} && ${CABAL} -vnormal check) ; fi
  - if [ ! "x$BATTERIES" = "xNO" ] ; then (cd ${PKGDIR_type_check} && ${CABAL} -vnormal check) ; fi
  # haddock...
  - ${CABAL} v2-haddock $WITHCOMPILER ${TEST} ${BENCH} all
  # Building without installed constraints for packages in global-db...
  - rm -f cabal.project.local
  - ${CABAL} v2-build $WITHCOMPILER --disable-tests --disable-benchmarks all

# REGENDATA ["--output=.travis.yml","--config=cabal.haskell-ci","cabal.project"]
# EOF
